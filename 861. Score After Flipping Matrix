class Solution {
public:
    int matrixScore(vector<vector<int>>& grid) {
     
        int m = grid.size();
        int n = grid[0].size();
        
        // Toggle rows to ensure the leftmost column contains all 1s
        for (int i = 0; i < m; ++i) {
            if (grid[i][0] == 0) {
                for (int j = 0; j < n; ++j) {
                    grid[i][j] ^= 1;
                }
            }
        }
        
        // Toggle columns to maximize the score
        for (int j = 1; j < n; ++j) {
            int count_ones = 0;
            for (int i = 0; i < m; ++i) {
                count_ones += grid[i][j];
            }
            if (count_ones < m - count_ones) {
                for (int i = 0; i < m; ++i) {
                    grid[i][j] ^= 1;
                }
            }
        }
        
        // Calculate the score
        int score = 0;
        for (int i = 0; i < m; ++i) {
            int row_sum = 0;
            for (int j = 0; j < n; ++j) {
                row_sum = row_sum * 2 + grid[i][j];
            }
            score += row_sum;
        }
        
        return score;
        
    }
};
